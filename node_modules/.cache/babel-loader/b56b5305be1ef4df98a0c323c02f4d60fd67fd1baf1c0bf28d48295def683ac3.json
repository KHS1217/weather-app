{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uD604\\uC2B9\\\\Desktop\\\\coding\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '23f65e1ee5019e1a1f83e8827af6b1dc';\nconst UNSPLASH_ACCESS_KEY = 'RATj1d305AZ2s3tXRUG1fnOCzRHKoulnLLH0lmASsoE'; // 실제 키로 교체됨\n\n// 도시 자동완성용 샘플 데이터 (실제 서비스에서는 API 사용 권장)\nconst CITY_LIST = ['Seoul', 'Busan', 'Incheon', 'Daegu', 'Daejeon', 'Gwangju', 'Suwon', 'Ulsan', 'New York', 'London', 'Paris', 'Tokyo', 'Beijing', 'Shanghai', 'Los Angeles', 'Sydney', 'Moscow', 'Berlin', 'Bangkok', 'Singapore'];\n\n// 도시-국가 코드 매핑 (샘플, 필요시 확장)\nconst CITY_COUNTRY = {\n  'Seoul': 'KR',\n  'Busan': 'KR',\n  'Incheon': 'KR',\n  'Daegu': 'KR',\n  'Daejeon': 'KR',\n  'Gwangju': 'KR',\n  'Suwon': 'KR',\n  'Ulsan': 'KR',\n  'New York': 'US',\n  'London': 'GB',\n  'Paris': 'FR',\n  'Tokyo': 'JP',\n  'Beijing': 'CN',\n  'Shanghai': 'CN',\n  'Los Angeles': 'US',\n  'Sydney': 'AU',\n  'Moscow': 'RU',\n  'Berlin': 'DE',\n  'Bangkok': 'TH',\n  'Singapore': 'SG'\n};\nfunction getWeatherKeyword(main) {\n  switch (main) {\n    case 'Clear':\n      return 'clear sky';\n    case 'Clouds':\n      return 'cloudy';\n    case 'Rain':\n    case 'Drizzle':\n      return 'rain';\n    case 'Thunderstorm':\n      return 'thunderstorm';\n    case 'Snow':\n      return 'snow';\n    default:\n      return 'weather';\n  }\n}\nfunction getFlagUrl(countryCode) {\n  if (!countryCode) return '';\n  return `https://flagcdn.com/w20/${countryCode.toLowerCase()}.png`;\n}\nfunction App() {\n  _s();\n  const [city, setCity] = useState('Seoul');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [error, setError] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [bgUrl, setBgUrl] = useState('');\n  const [bgVideoUrl, setBgVideoUrl] = useState('');\n  const fetchWeather = async cityName => {\n    setError('');\n    try {\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${API_KEY}&units=metric&lang=kr`);\n      setWeather(res.data.list[0]);\n      setForecast(res.data.list.slice(0, 8));\n      // 배경 이미지/영상 fetch\n      const mainWeather = res.data.list[0].weather[0].main;\n      fetchBackground(cityName, mainWeather);\n    } catch (e) {\n      setError('도시를 찾을 수 없습니다.');\n      setWeather(null);\n      setForecast([]);\n      setBgUrl('');\n      setBgVideoUrl('');\n    }\n  };\n\n  // Unsplash에서 도시+날씨 키워드로 이미지 fetch\n  const fetchBackground = async (cityName, mainWeather) => {\n    const keyword = `${cityName} ${getWeatherKeyword(mainWeather)}`;\n    try {\n      // Unsplash 이미지\n      const imgRes = await axios.get(`https://api.unsplash.com/photos/random?query=${encodeURIComponent(keyword)}&orientation=landscape&client_id=${UNSPLASH_ACCESS_KEY}`);\n      setBgUrl(imgRes.data.urls.regular);\n    } catch {\n      setBgUrl('');\n    }\n    // Pexels 등에서 영상 fetch (예시, 실제 키 필요)\n    // setBgVideoUrl('https://www.w3schools.com/howto/rain.mp4'); // 샘플 영상\n    setBgVideoUrl(''); // 실제 영상 API 연동 필요\n  };\n  React.useEffect(() => {\n    fetchWeather(city);\n    // eslint-disable-next-line\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeather(city);\n  };\n\n  // 자동완성\n  const handleCityChange = e => {\n    const value = e.target.value;\n    setCity(value);\n    if (value.length > 0) {\n      setSuggestions(CITY_LIST.filter(c => c.toLowerCase().startsWith(value.toLowerCase())).slice(0, 5));\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    setCity(suggestion);\n    setSuggestions([]);\n    fetchWeather(suggestion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    style: bgUrl ? {\n      backgroundImage: `url(${bgUrl})`\n    } : {},\n    children: [bgVideoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      className: \"bg-video\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: bgVideoUrl,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"city-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: handleCityChange,\n        placeholder: \"\\uB3C4\\uC2DC \\uC774\\uB984 \\uC785\\uB825 (\\uC608: Seoul)\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions\",\n        children: suggestions.map((s, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleSuggestionClick(s),\n          children: s\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: 20,\n          top: 20\n        },\n        children: getFlagUrl(CITY_COUNTRY[city]) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getFlagUrl(CITY_COUNTRY[city]),\n          alt: \"flag\",\n          style: {\n            width: 32,\n            height: 20,\n            borderRadius: 3,\n            boxShadow: '0 1px 4px rgba(0,0,0,0.1)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n          alt: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: weather.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC2DC\\uAC04\\uB300\\uBCC4 \\uC608\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: forecast.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.dt_txt.slice(11, 16)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n            alt: item.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [Math.round(item.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7a52vVuLHDvnz06hgyjyqzALwtU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_KEY","UNSPLASH_ACCESS_KEY","CITY_LIST","CITY_COUNTRY","getWeatherKeyword","main","getFlagUrl","countryCode","toLowerCase","App","_s","city","setCity","weather","setWeather","forecast","setForecast","error","setError","suggestions","setSuggestions","bgUrl","setBgUrl","bgVideoUrl","setBgVideoUrl","fetchWeather","cityName","res","get","data","list","slice","mainWeather","fetchBackground","e","keyword","imgRes","encodeURIComponent","urls","regular","useEffect","handleSubmit","preventDefault","handleCityChange","value","target","length","filter","c","startsWith","handleSuggestionClick","suggestion","className","style","backgroundImage","children","autoPlay","loop","muted","src","type","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","autoComplete","map","s","idx","onClick","position","left","top","alt","width","height","borderRadius","boxShadow","icon","description","Math","round","temp","item","dt_txt","_c","$RefreshReg$"],"sources":["C:/Users/김현승/Desktop/coding/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst API_KEY = '23f65e1ee5019e1a1f83e8827af6b1dc';\r\nconst UNSPLASH_ACCESS_KEY = 'RATj1d305AZ2s3tXRUG1fnOCzRHKoulnLLH0lmASsoE'; // 실제 키로 교체됨\r\n\r\n// 도시 자동완성용 샘플 데이터 (실제 서비스에서는 API 사용 권장)\r\nconst CITY_LIST = [\r\n  'Seoul', 'Busan', 'Incheon', 'Daegu', 'Daejeon', 'Gwangju', 'Suwon', 'Ulsan',\r\n  'New York', 'London', 'Paris', 'Tokyo', 'Beijing', 'Shanghai', 'Los Angeles', 'Sydney', 'Moscow', 'Berlin', 'Bangkok', 'Singapore'\r\n];\r\n\r\n// 도시-국가 코드 매핑 (샘플, 필요시 확장)\r\nconst CITY_COUNTRY = {\r\n  'Seoul': 'KR',\r\n  'Busan': 'KR',\r\n  'Incheon': 'KR',\r\n  'Daegu': 'KR',\r\n  'Daejeon': 'KR',\r\n  'Gwangju': 'KR',\r\n  'Suwon': 'KR',\r\n  'Ulsan': 'KR',\r\n  'New York': 'US',\r\n  'London': 'GB',\r\n  'Paris': 'FR',\r\n  'Tokyo': 'JP',\r\n  'Beijing': 'CN',\r\n  'Shanghai': 'CN',\r\n  'Los Angeles': 'US',\r\n  'Sydney': 'AU',\r\n  'Moscow': 'RU',\r\n  'Berlin': 'DE',\r\n  'Bangkok': 'TH',\r\n  'Singapore': 'SG',\r\n};\r\n\r\nfunction getWeatherKeyword(main) {\r\n  switch (main) {\r\n    case 'Clear': return 'clear sky';\r\n    case 'Clouds': return 'cloudy';\r\n    case 'Rain':\r\n    case 'Drizzle': return 'rain';\r\n    case 'Thunderstorm': return 'thunderstorm';\r\n    case 'Snow': return 'snow';\r\n    default: return 'weather';\r\n  }\r\n}\r\n\r\nfunction getFlagUrl(countryCode) {\r\n  if (!countryCode) return '';\r\n  return `https://flagcdn.com/w20/${countryCode.toLowerCase()}.png`;\r\n}\r\n\r\nfunction App() {\r\n  const [city, setCity] = useState('Seoul');\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [bgUrl, setBgUrl] = useState('');\r\n  const [bgVideoUrl, setBgVideoUrl] = useState('');\r\n\r\n  const fetchWeather = async (cityName) => {\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${API_KEY}&units=metric&lang=kr`\r\n      );\r\n      setWeather(res.data.list[0]);\r\n      setForecast(res.data.list.slice(0, 8));\r\n      // 배경 이미지/영상 fetch\r\n      const mainWeather = res.data.list[0].weather[0].main;\r\n      fetchBackground(cityName, mainWeather);\r\n    } catch (e) {\r\n      setError('도시를 찾을 수 없습니다.');\r\n      setWeather(null);\r\n      setForecast([]);\r\n      setBgUrl('');\r\n      setBgVideoUrl('');\r\n    }\r\n  };\r\n\r\n  // Unsplash에서 도시+날씨 키워드로 이미지 fetch\r\n  const fetchBackground = async (cityName, mainWeather) => {\r\n    const keyword = `${cityName} ${getWeatherKeyword(mainWeather)}`;\r\n    try {\r\n      // Unsplash 이미지\r\n      const imgRes = await axios.get(\r\n        `https://api.unsplash.com/photos/random?query=${encodeURIComponent(keyword)}&orientation=landscape&client_id=${UNSPLASH_ACCESS_KEY}`\r\n      );\r\n      setBgUrl(imgRes.data.urls.regular);\r\n    } catch {\r\n      setBgUrl('');\r\n    }\r\n    // Pexels 등에서 영상 fetch (예시, 실제 키 필요)\r\n    // setBgVideoUrl('https://www.w3schools.com/howto/rain.mp4'); // 샘플 영상\r\n    setBgVideoUrl(''); // 실제 영상 API 연동 필요\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchWeather(city);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchWeather(city);\r\n  };\r\n\r\n  // 자동완성\r\n  const handleCityChange = (e) => {\r\n    const value = e.target.value;\r\n    setCity(value);\r\n    if (value.length > 0) {\r\n      setSuggestions(\r\n        CITY_LIST.filter(c => c.toLowerCase().startsWith(value.toLowerCase())).slice(0, 5)\r\n      );\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setCity(suggestion);\r\n    setSuggestions([]);\r\n    fetchWeather(suggestion);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\" style={bgUrl ? {backgroundImage: `url(${bgUrl})`} : {}}>\r\n      {bgVideoUrl && (\r\n        <video autoPlay loop muted className=\"bg-video\">\r\n          <source src={bgVideoUrl} type=\"video/mp4\" />\r\n        </video>\r\n      )}\r\n      <form onSubmit={handleSubmit} className=\"city-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={handleCityChange}\r\n          placeholder=\"도시 이름 입력 (예: Seoul)\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\">검색</button>\r\n        {suggestions.length > 0 && (\r\n          <ul className=\"suggestions\">\r\n            {suggestions.map((s, idx) => (\r\n              <li key={idx} onClick={() => handleSuggestionClick(s)}>{s}</li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {weather && (\r\n        <div className=\"current-weather\">\r\n          {/* 국기 아이콘 */}\r\n          <div style={{position: 'absolute', left: 20, top: 20}}>\r\n            {getFlagUrl(CITY_COUNTRY[city]) && (\r\n              <img src={getFlagUrl(CITY_COUNTRY[city])} alt=\"flag\" style={{width: 32, height: 20, borderRadius: 3, boxShadow: '0 1px 4px rgba(0,0,0,0.1)'}} />\r\n            )}\r\n          </div>\r\n          <h2>{city}</h2>\r\n          <div className=\"weather-main\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n              alt={weather.weather[0].description}\r\n            />\r\n            <div>\r\n              <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\r\n              <div>{weather.weather[0].description}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {forecast.length > 0 && (\r\n        <div className=\"forecast\">\r\n          <h3>시간대별 예보</h3>\r\n          <div className=\"forecast-list\">\r\n            {forecast.map((item, idx) => (\r\n              <div key={idx} className=\"forecast-item\">\r\n                <div>{item.dt_txt.slice(11, 16)}</div>\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${item.weather[0].icon}.png`}\r\n                  alt={item.weather[0].description}\r\n                />\r\n                <div>{Math.round(item.main.temp)}°C</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}