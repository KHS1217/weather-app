{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uD604\\uC2B9\\\\Desktop\\\\coding\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '23f65e1ee5019e1a1f83e8827af6b1dc';\nfunction getBackgroundByWeather(main) {\n  switch (main) {\n    case 'Clear':\n      return 'clear-bg';\n    case 'Clouds':\n      return 'clouds-bg';\n    case 'Rain':\n    case 'Drizzle':\n      return 'rain-bg';\n    case 'Thunderstorm':\n      return 'thunder-bg';\n    case 'Snow':\n      return 'snow-bg';\n    default:\n      return 'default-bg';\n  }\n}\nfunction App() {\n  _s();\n  const [city, setCity] = useState('Seoul');\n  const [weather, setWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [error, setError] = useState('');\n  const fetchWeather = async cityName => {\n    setError('');\n    try {\n      const res = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${API_KEY}&units=metric&lang=kr`);\n      setWeather(res.data.list[0]); // 현재와 가장 가까운 시간대\n      setForecast(res.data.list.slice(0, 8)); // 24시간(3시간 간격 8개)\n    } catch (e) {\n      setError('도시를 찾을 수 없습니다.');\n      setWeather(null);\n      setForecast([]);\n    }\n  };\n  React.useEffect(() => {\n    fetchWeather(city);\n    // eslint-disable-next-line\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeather(city);\n  };\n  const bgClass = weather ? getBackgroundByWeather(weather.weather[0].main) : 'default-bg';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${bgClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"city-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        placeholder: \"\\uB3C4\\uC2DC \\uC774\\uB984 \\uC785\\uB825 (\\uC608: Seoul)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n          alt: weather.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: weather.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC2DC\\uAC04\\uB300\\uBCC4 \\uC608\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: forecast.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: item.dt_txt.slice(11, 16)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n            alt: item.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [Math.round(item.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OCX9ZgRShqLUIE7RqcRYLN6Q4oQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_KEY","getBackgroundByWeather","main","App","_s","city","setCity","weather","setWeather","forecast","setForecast","error","setError","fetchWeather","cityName","res","get","data","list","slice","e","useEffect","handleSubmit","preventDefault","bgClass","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","description","Math","round","temp","length","map","item","idx","dt_txt","_c","$RefreshReg$"],"sources":["C:/Users/김현승/Desktop/coding/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst API_KEY = '23f65e1ee5019e1a1f83e8827af6b1dc';\r\n\r\nfunction getBackgroundByWeather(main) {\r\n  switch (main) {\r\n    case 'Clear':\r\n      return 'clear-bg';\r\n    case 'Clouds':\r\n      return 'clouds-bg';\r\n    case 'Rain':\r\n    case 'Drizzle':\r\n      return 'rain-bg';\r\n    case 'Thunderstorm':\r\n      return 'thunder-bg';\r\n    case 'Snow':\r\n      return 'snow-bg';\r\n    default:\r\n      return 'default-bg';\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [city, setCity] = useState('Seoul');\r\n  const [weather, setWeather] = useState(null);\r\n  const [forecast, setForecast] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchWeather = async (cityName) => {\r\n    setError('');\r\n    try {\r\n      const res = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${API_KEY}&units=metric&lang=kr`\r\n      );\r\n      setWeather(res.data.list[0]); // 현재와 가장 가까운 시간대\r\n      setForecast(res.data.list.slice(0, 8)); // 24시간(3시간 간격 8개)\r\n    } catch (e) {\r\n      setError('도시를 찾을 수 없습니다.');\r\n      setWeather(null);\r\n      setForecast([]);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchWeather(city);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchWeather(city);\r\n  };\r\n\r\n  const bgClass = weather ? getBackgroundByWeather(weather.weather[0].main) : 'default-bg';\r\n\r\n  return (\r\n    <div className={`app-container ${bgClass}`}>\r\n      <form onSubmit={handleSubmit} className=\"city-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={city}\r\n          onChange={e => setCity(e.target.value)}\r\n          placeholder=\"도시 이름 입력 (예: Seoul)\"\r\n        />\r\n        <button type=\"submit\">검색</button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {weather && (\r\n        <div className=\"current-weather\">\r\n          <h2>{city}</h2>\r\n          <div className=\"weather-main\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n              alt={weather.weather[0].description}\r\n            />\r\n            <div>\r\n              <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\r\n              <div>{weather.weather[0].description}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {forecast.length > 0 && (\r\n        <div className=\"forecast\">\r\n          <h3>시간대별 예보</h3>\r\n          <div className=\"forecast-list\">\r\n            {forecast.map((item, idx) => (\r\n              <div key={idx} className=\"forecast-item\">\r\n                <div>{item.dt_txt.slice(11, 16)}</div>\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${item.weather[0].icon}.png`}\r\n                  alt={item.weather[0].description}\r\n                />\r\n                <div>{Math.round(item.main.temp)}°C</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}